# -*- coding: gbk -*-
'''
    要求：学生成绩管理系统。面向对象开发；使用文件保存数据；
        使用装饰器对每个操作进行计时或者登录验证；
        使用生成器和协程对数据进行并发存取。
        其他要求为学生信息和成绩信息的增删改查操作，
        学生成绩单科和总成绩的均值方差计算和排序等常规操作都要完成。（用迭代器访问数据）
    思路：
        1   用csv保存数据，用迭代器的方式访问
        2   增删改查、求均值方差排序等
        3   用装饰器实现登录验证
        4   生成器和协程并发读取数据
    细节：
        将整个系统分为三个部分：
            学生类(Student)：用于创建单个学生对象的信息并显示
                        学生有学号、姓名、性别、年龄、语文数学成绩和总成绩
                        以字典格式添加到属性
                        显示：遍历打印字典的键值对

            用户类(User)：用于注册、登录、登录验证
                    用一个json文件保存用户的用户名和密码
                    注册：接收输入的用户名和密码，简单地用正则验证一下用户名和密码的规范性，并保存
                    登录：验证用户名与密码是否匹配，并修改登录后的状态信息
                    登录验证：定义一个装饰器，未登录时提醒用户登录，并对所有
                            功能函数添加这个登录验证

            管理类(Manager)：对数据进行一系列的操作，数据用一个csv文件保存
                    创建一个User对象作为类属性，使其可以在类中装饰各种功能函数
                    初始化：将已有数据读出，并作为参数创建Student对象，添加到列表中,
                          保证数据
                    增：输入数据作为参数创建Student对象，并添加到列表
                    删：输入学号与列表中对象学号一致时删除
                    改：输入学号与列表中对象学号一致时重新输入数据覆盖原数据
                    查：输入学号与列表中对象学号一致时调用对象的显示函数
                    显示全部：遍历列表，调用列表每一对象的显示函数
                    求平均数：
                        利用python自带的map函数结合匿名函数从学生列表中得到语文、数学及总分的列表
                        将以上列表作为利用numpy包直接求出数学，语文，总分的平均数
                    求方差：同上
                    排序：用自带的sorted函数结合匿名函数按总分降序排序
                    登录：调用User的登录方法
                    注册：调用User的注册方法
                    保存数据：遍历学生列表，将每一学生信息值逐行写入csv文件
                    布局：
                        利用生产者和消费者模型
                        定义一个生成器，编配各种功能，获取命令并对应执行函数
                        定义一个主函数，创建生成器，不断地接收输入命令并发送给生成器
        第三方库：numpy
        标准库：csv、re、os

'''
from manager import Manager
if __name__ == '__main__':
    m=Manager()
    m.main()